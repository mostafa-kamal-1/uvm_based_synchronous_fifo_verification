Coverage Report by instance with details

=================================================================================
=== Instance: /FIFO_top/f_if
=== Design Unit: work.FIFO_if
=================================================================================
Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         86        86         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_top/f_if --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                       almostempty           1           1      100.00 
                                        almostfull           1           1      100.00 
                                               clk           1           1      100.00 
                                     data_in[15-0]           1           1      100.00 
                                    data_out[15-0]           1           1      100.00 
                                             empty           1           1      100.00 
                                              full           1           1      100.00 
                                          overflow           1           1      100.00 
                                             rd_en           1           1      100.00 
                                             rst_n           1           1      100.00 
                                         underflow           1           1      100.00 
                                            wr_ack           1           1      100.00 
                                             wr_en           1           1      100.00 

Total Node Count     =         43 
Toggled Node Count   =         43 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (86 of 86 bins)

=================================================================================
=== Instance: /FIFO_top/DUT/FIFO_SVA_INSTA
=== Design Unit: work.FIFO_SVA
=================================================================================

Assertion Coverage:
    Assertions                      15        15         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_top/DUT/FIFO_SVA_INSTA/reset_assert
                     FIFO_SVA.sv(6)                     0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/full_flag_assert
                     FIFO_SVA.sv(14)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/almostfull_flag_assert
                     FIFO_SVA.sv(19)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/empty_flag_assert
                     FIFO_SVA.sv(24)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/almostempty_flag_assert
                     FIFO_SVA.sv(29)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/overflow_flag_assert
                     FIFO_SVA.sv(39)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/underflow_flag_assert
                     FIFO_SVA.sv(45)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/wr_ack_high_flag_assert
                     FIFO_SVA.sv(51)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/wr_ack_low_flag_assert
                     FIFO_SVA.sv(57)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/write_op_assert
                     FIFO_SVA.sv(63)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/read_op_assert
                     FIFO_SVA.sv(69)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/write_pri_assert
                     FIFO_SVA.sv(75)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/read_pri_assert
                     FIFO_SVA.sv(81)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/read_ptr_assert
                     FIFO_SVA.sv(87)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/write_ptr_assert
                     FIFO_SVA.sv(93)                    0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10        10         0   100.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_top/DUT/FIFO_SVA_INSTA

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_SVA.sv
------------------------------------IF Branch------------------------------------
    5                                       7011     Count coming in to IF
    5               1                        500     if(!f_if.rst_n) begin
                                            6511     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    13                                      6014     Count coming in to IF
    13              1                       1568     if(f_if.rst_n && (DUT.count== f_if.FIFO_DEPTH)) begin
                                            4446     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    18                                      6014     Count coming in to IF
    18              1                       1858     if(f_if.rst_n && (DUT.count== f_if.FIFO_DEPTH-1)) begin
                                            4156     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    23                                      6014     Count coming in to IF
    23              1                        320     if(f_if.rst_n && (DUT.count== 0)) begin
                                            5694     All False Count
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    28                                      6014     Count coming in to IF
    28              1                        244     if(f_if.rst_n && (DUT.count== 1)) begin
                                            5770     All False Count
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       8         8         0   100.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_top/DUT/FIFO_SVA_INSTA --

  File FIFO_SVA.sv
----------------Focused Condition View-------------------
Line       13 Item    1  (f_if.rst_n && (DUT.count == f_if.FIFO_DEPTH))
Condition totals: 2 of 2 input terms covered = 100.00%

                      Input Term   Covered  Reason for no coverage   Hint
                     -----------  --------  -----------------------  --------------
                      f_if.rst_n         Y
  (DUT.count == f_if.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                        Non-masking condition(s)      
 ---------  ---------  --------------------              -------------------------     
  Row   1:          1  f_if.rst_n_0                      -                             
  Row   2:          1  f_if.rst_n_1                      (DUT.count == f_if.FIFO_DEPTH)
  Row   3:          1  (DUT.count == f_if.FIFO_DEPTH)_0  f_if.rst_n                    
  Row   4:          1  (DUT.count == f_if.FIFO_DEPTH)_1  f_if.rst_n                    

----------------Focused Condition View-------------------
Line       18 Item    1  (f_if.rst_n && (DUT.count == (f_if.FIFO_DEPTH - 1)))
Condition totals: 2 of 2 input terms covered = 100.00%

                            Input Term   Covered  Reason for no coverage   Hint
                           -----------  --------  -----------------------  --------------
                            f_if.rst_n         Y
  (DUT.count == (f_if.FIFO_DEPTH - 1))         Y

     Rows:       Hits  FEC Target                              Non-masking condition(s)      
 ---------  ---------  --------------------                    -------------------------     
  Row   1:          1  f_if.rst_n_0                            -                             
  Row   2:          1  f_if.rst_n_1                            (DUT.count == (f_if.FIFO_DEPTH - 1))
  Row   3:          1  (DUT.count == (f_if.FIFO_DEPTH - 1))_0  f_if.rst_n                    
  Row   4:          1  (DUT.count == (f_if.FIFO_DEPTH - 1))_1  f_if.rst_n                    

----------------Focused Condition View-------------------
Line       23 Item    1  (f_if.rst_n && (DUT.count == 0))
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
        f_if.rst_n         Y
  (DUT.count == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  f_if.rst_n_0          -                             
  Row   2:          1  f_if.rst_n_1          (DUT.count == 0)              
  Row   3:          1  (DUT.count == 0)_0    f_if.rst_n                    
  Row   4:          1  (DUT.count == 0)_1    f_if.rst_n                    

----------------Focused Condition View-------------------
Line       28 Item    1  (f_if.rst_n && (DUT.count == 1))
Condition totals: 2 of 2 input terms covered = 100.00%

        Input Term   Covered  Reason for no coverage   Hint
       -----------  --------  -----------------------  --------------
        f_if.rst_n         Y
  (DUT.count == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  f_if.rst_n_0          -                             
  Row   2:          1  f_if.rst_n_1          (DUT.count == 1)              
  Row   3:          1  (DUT.count == 1)_0    f_if.rst_n                    
  Row   4:          1  (DUT.count == 1)_1    f_if.rst_n                    



Directive Coverage:
    Directives                      15        15         0   100.00%

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/FIFO_top/DUT/FIFO_SVA_INSTA/reset_cover FIFO_SVA Verilog  SVA  FIFO_SVA.sv(7)   301 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/full_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(15) 1568 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/almostfull_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(20) 1858 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/empty_flag_acover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(25)  320 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/almostempty_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(30)  244 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/overflow_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(40) 12391 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/underflow_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(46) 9842 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/wr_ack_high_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(52) 4277 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/wr_ack_low_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(58) 12391 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/write_op_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(64) 3266 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/read_op_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(70)  904 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/write_pri_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(76)  963 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/read_pri_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(82)   32 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/read_ptr_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(88) 2846 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/write_ptr_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(94) 4277 Covered   
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       2         2         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_top/DUT/FIFO_SVA_INSTA --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_SVA.sv
    1                                                module FIFO_SVA(FIFO_if.DUT f_if);
    2                                                
    3                                                // reset asseration 
    4               1                       7011     always_comb begin
    5                                                if(!f_if.rst_n) begin
    6                                                reset_assert: assert final(!DUT.wr_ptr && !DUT.rd_ptr && !DUT.count);
    7                                                reset_cover: cover final(!DUT.wr_ptr && !DUT.rd_ptr && !DUT.count);
    8                                                end
    9                                                end
    10                                               //immediate asserations
    11              1                       6014     always_comb begin


=================================================================================
=== Instance: /FIFO_top/DUT
=== Design Unit: work.FIFO
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        25        25         0   100.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_top/DUT

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
------------------------------------IF Branch------------------------------------
    10                                     30345     Count coming in to IF
    10              1                        604         if (!f_if.rst_n) begin
    15              1                       4324         else if (f_if.wr_en && count < f_if.FIFO_DEPTH) begin
    20              1                      25417         else begin 
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    22                                     25417     Count coming in to IF
    22              1                      12508           if (f_if.full && f_if.wr_en)
    24              1                      12909           else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    31                                     30345     Count coming in to IF
    31              1                        604         if (!f_if.rst_n) begin
    35              1                       2882         else if (f_if.rd_en && count != 0) begin
    39              1                      26859         else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    40                                     26859     Count coming in to IF
    40              1                       9945           if (f_if.empty && f_if.rd_en)  // make underflow signal sequential
    42              1                      16914           else
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    48                                      9703     Count coming in to IF
    48              1                        604         if (!f_if.rst_n) begin
    51              1                       9099         else begin
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    52                                      9099     Count coming in to IF
    52              1                       3295           if ({f_if.wr_en, f_if.rd_en} == 2'b10 && !f_if.full) 
    54              1                        913           else if ({f_if.wr_en, f_if.rd_en} == 2'b01 && !f_if.empty)
    56              1                        972           else if ({f_if.wr_en, f_if.rd_en} == 2'b11 && f_if.full) // add unhandled case
    58              1                         32           else if ({f_if.wr_en, f_if.rd_en} == 2'b11 && f_if.empty) // add unhandled case
                                            3887     All False Count
Branch totals: 5 hits of 5 branches = 100.00%

------------------------------------IF Branch------------------------------------
    63                                      5411     Count coming in to IF
    63              1                       1568       assign f_if.full = (count == f_if.FIFO_DEPTH) ? 1 : 0;
    63              2                       3843       assign f_if.full = (count == f_if.FIFO_DEPTH) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    64                                      5411     Count coming in to IF
    64              1                        218       assign f_if.empty = (count == 0) ? 1 : 0;
    64              2                       5193       assign f_if.empty = (count == 0) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    65                                      5411     Count coming in to IF
    65              1                       1858       assign f_if.almostfull = (count == f_if.FIFO_DEPTH-1) ? 1 : 0; // modify the almostfull signal to match design specs
    65              2                       3553       assign f_if.almostfull = (count == f_if.FIFO_DEPTH-1) ? 1 : 0; // modify the almostfull signal to match design specs
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    66                                      5411     Count coming in to IF
    66              1                        244       assign f_if.almostempty = (count == 1) ? 1 : 0;
    66              2                       5167       assign f_if.almostempty = (count == 1) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      24        24         0   100.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_top/DUT --

  File FIFO.sv
----------------Focused Condition View-------------------
Line       15 Item    1  (f_if.wr_en && (count < f_if.FIFO_DEPTH))
Condition totals: 2 of 2 input terms covered = 100.00%

                 Input Term   Covered  Reason for no coverage   Hint
                -----------  --------  -----------------------  --------------
                 f_if.wr_en         Y
  (count < f_if.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                   Non-masking condition(s)      
 ---------  ---------  --------------------         -------------------------     
  Row   1:          1  f_if.wr_en_0                 -                             
  Row   2:          1  f_if.wr_en_1                 (count < f_if.FIFO_DEPTH)     
  Row   3:          1  (count < f_if.FIFO_DEPTH)_0  f_if.wr_en                    
  Row   4:          1  (count < f_if.FIFO_DEPTH)_1  f_if.wr_en                    

----------------Focused Condition View-------------------
Line       22 Item    1  (f_if.full && f_if.wr_en)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
   f_if.full         Y
  f_if.wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  f_if.full_0           -                             
  Row   2:          1  f_if.full_1           f_if.wr_en                    
  Row   3:          1  f_if.wr_en_0          f_if.full                     
  Row   4:          1  f_if.wr_en_1          f_if.full                     

----------------Focused Condition View-------------------
Line       35 Item    1  (f_if.rd_en && (count != 0))
Condition totals: 2 of 2 input terms covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
    f_if.rd_en         Y
  (count != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  f_if.rd_en_0          -                             
  Row   2:          1  f_if.rd_en_1          (count != 0)                  
  Row   3:          1  (count != 0)_0        f_if.rd_en                    
  Row   4:          1  (count != 0)_1        f_if.rd_en                    

----------------Focused Condition View-------------------
Line       40 Item    1  (f_if.empty && f_if.rd_en)
Condition totals: 2 of 2 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  f_if.empty         Y
  f_if.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  f_if.empty_0          -                             
  Row   2:          1  f_if.empty_1          f_if.rd_en                    
  Row   3:          1  f_if.rd_en_0          f_if.empty                    
  Row   4:          1  f_if.rd_en_1          f_if.empty                    

----------------Focused Condition View-------------------
Line       52 Item    1  ((~f_if.rd_en && f_if.wr_en) && ~f_if.full)
Condition totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  f_if.rd_en         Y
  f_if.wr_en         Y
   f_if.full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  f_if.rd_en_0          (~f_if.full && f_if.wr_en)    
  Row   2:          1  f_if.rd_en_1          -                             
  Row   3:          1  f_if.wr_en_0          ~f_if.rd_en                   
  Row   4:          1  f_if.wr_en_1          (~f_if.full && ~f_if.rd_en)   
  Row   5:          1  f_if.full_0           (~f_if.rd_en && f_if.wr_en)   
  Row   6:          1  f_if.full_1           (~f_if.rd_en && f_if.wr_en)   

----------------Focused Condition View-------------------
Line       54 Item    1  ((f_if.rd_en && ~f_if.wr_en) && ~f_if.empty)
Condition totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  f_if.rd_en         Y
  f_if.wr_en         Y
  f_if.empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  f_if.rd_en_0          -                             
  Row   2:          1  f_if.rd_en_1          (~f_if.empty && ~f_if.wr_en)  
  Row   3:          1  f_if.wr_en_0          (~f_if.empty && f_if.rd_en)   
  Row   4:          1  f_if.wr_en_1          f_if.rd_en                    
  Row   5:          1  f_if.empty_0          (f_if.rd_en && ~f_if.wr_en)   
  Row   6:          1  f_if.empty_1          (f_if.rd_en && ~f_if.wr_en)   

----------------Focused Condition View-------------------
Line       56 Item    1  ((f_if.rd_en && f_if.wr_en) && f_if.full)
Condition totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  f_if.rd_en         Y
  f_if.wr_en         Y
   f_if.full         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  f_if.rd_en_0          -                             
  Row   2:          1  f_if.rd_en_1          (f_if.full && f_if.wr_en)     
  Row   3:          1  f_if.wr_en_0          f_if.rd_en                    
  Row   4:          1  f_if.wr_en_1          (f_if.full && f_if.rd_en)     
  Row   5:          1  f_if.full_0           (f_if.rd_en && f_if.wr_en)    
  Row   6:          1  f_if.full_1           (f_if.rd_en && f_if.wr_en)    

----------------Focused Condition View-------------------
Line       58 Item    1  ((f_if.rd_en && f_if.wr_en) && f_if.empty)
Condition totals: 3 of 3 input terms covered = 100.00%

  Input Term   Covered  Reason for no coverage   Hint
 -----------  --------  -----------------------  --------------
  f_if.rd_en         Y
  f_if.wr_en         Y
  f_if.empty         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  f_if.rd_en_0          -                             
  Row   2:          1  f_if.rd_en_1          (f_if.empty && f_if.wr_en)    
  Row   3:          1  f_if.wr_en_0          f_if.rd_en                    
  Row   4:          1  f_if.wr_en_1          (f_if.empty && f_if.rd_en)    
  Row   5:          1  f_if.empty_0          (f_if.rd_en && f_if.wr_en)    
  Row   6:          1  f_if.empty_1          (f_if.rd_en && f_if.wr_en)    

----------------Focused Condition View-------------------
Line       63 Item    1  (count == f_if.FIFO_DEPTH)
Condition totals: 1 of 1 input term covered = 100.00%

                  Input Term   Covered  Reason for no coverage   Hint
                 -----------  --------  -----------------------  --------------
  (count == f_if.FIFO_DEPTH)         Y

     Rows:       Hits  FEC Target                    Non-masking condition(s)      
 ---------  ---------  --------------------          -------------------------     
  Row   1:          1  (count == f_if.FIFO_DEPTH)_0  -                             
  Row   2:          1  (count == f_if.FIFO_DEPTH)_1  -                             

----------------Focused Condition View-------------------
Line       64 Item    1  (count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 0)_0        -                             
  Row   2:          1  (count == 0)_1        -                             

----------------Focused Condition View-------------------
Line       65 Item    1  (count == (f_if.FIFO_DEPTH - 1))
Condition totals: 1 of 1 input term covered = 100.00%

                        Input Term   Covered  Reason for no coverage   Hint
                       -----------  --------  -----------------------  --------------
  (count == (f_if.FIFO_DEPTH - 1))         Y

     Rows:       Hits  FEC Target                          Non-masking condition(s)      
 ---------  ---------  --------------------                -------------------------     
  Row   1:          1  (count == (f_if.FIFO_DEPTH - 1))_0  -                             
  Row   2:          1  (count == (f_if.FIFO_DEPTH - 1))_1  -                             

----------------Focused Condition View-------------------
Line       66 Item    1  (count == 1)
Condition totals: 1 of 1 input term covered = 100.00%

    Input Term   Covered  Reason for no coverage   Hint
   -----------  --------  -----------------------  --------------
  (count == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (count == 1)_0        -                             
  Row   2:          1  (count == 1)_1        -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      27        27         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_top/DUT --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO.sv
    1                                                module FIFO(FIFO_if.DUT f_if);
    2                                                  localparam max_fifo_addr = $clog2(f_if.FIFO_DEPTH);
    3                                                
    4                                                  reg [f_if.FIFO_WIDTH-1:0] mem [f_if.FIFO_DEPTH-1:0];
    5                                                  reg [max_fifo_addr-1:0] wr_ptr, rd_ptr;
    6                                                  reg [max_fifo_addr:0] count;
    7                                                
    8                                                  //write operation
    9               1                      30345       always @(posedge f_if.clk or negedge f_if.rst_n) begin
    10                                                   if (!f_if.rst_n) begin
    11              1                        604           wr_ptr <= 0;
    12              1                        604           f_if.overflow <= 0; // reset overflow signal
    13              1                        604           f_if.wr_ack <= 0; // reset wr_ack signal
    14                                                   end
    15                                                   else if (f_if.wr_en && count < f_if.FIFO_DEPTH) begin
    16              1                       4324           mem[wr_ptr] <= f_if.data_in;
    17              1                       4324           f_if.wr_ack <= 1;
    18              1                       4324           wr_ptr <= wr_ptr + 1;
    19                                                   end
    20                                                   else begin 
    21              1                      25417           f_if.wr_ack <= 0;
    22                                                     if (f_if.full && f_if.wr_en)
    23              1                      12508             f_if.overflow <= 1;
    24                                                     else
    25              1                      12909             f_if.overflow <= 0;
    26                                                   end
    27                                                 end
    28                                                 
    29                                                 //read operation
    30              1                      30345       always @(posedge f_if.clk or negedge f_if.rst_n) begin
    31                                                   if (!f_if.rst_n) begin
    32              1                        604           rd_ptr <= 0; 
    33              1                        604           f_if.underflow <= 0; // reset underflow signal
    34                                                   end
    35                                                   else if (f_if.rd_en && count != 0) begin
    36              1                       2882           f_if.data_out <= mem[rd_ptr];
    37              1                       2882           rd_ptr <= rd_ptr + 1;
    38                                                   end
    39                                                   else begin
    40                                                     if (f_if.empty && f_if.rd_en)  // make underflow signal sequential
    41              1                       9945             f_if.underflow <= 1;
    42                                                     else
    43              1                      16914             f_if.underflow <= 0;
    44                                                   end
    45                                                 end
    46                                                 // count operations
    47              1                       9703       always @(posedge f_if.clk or negedge f_if.rst_n) begin
    48                                                   if (!f_if.rst_n) begin
    49              1                        604           count <= 0;
    50                                                   end
    51                                                   else begin
    52                                                     if ({f_if.wr_en, f_if.rd_en} == 2'b10 && !f_if.full) 
    53              1                       3295             count <= count + 1;
    54                                                     else if ({f_if.wr_en, f_if.rd_en} == 2'b01 && !f_if.empty)
    55              1                        913             count <= count - 1;
    56                                                     else if ({f_if.wr_en, f_if.rd_en} == 2'b11 && f_if.full) // add unhandled case
    57              1                        972             count <= count - 1;
    58                                                     else if ({f_if.wr_en, f_if.rd_en} == 2'b11 && f_if.empty) // add unhandled case
    59              1                         32             count <= count + 1;
    60                                                   end
    61                                                 end
    62                                                 // flags operations
    63              1                       5412       assign f_if.full = (count == f_if.FIFO_DEPTH) ? 1 : 0;
    64              1                       5412       assign f_if.empty = (count == 0) ? 1 : 0;
    65              1                       5412       assign f_if.almostfull = (count == f_if.FIFO_DEPTH-1) ? 1 : 0; // modify the almostfull signal to match design specs
    66              1                       5412       assign f_if.almostempty = (count == 1) ? 1 : 0;

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                         20        20         0   100.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_top/DUT --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                        count[3-0]           1           1      100.00 
                                       rd_ptr[2-0]           1           1      100.00 
                                       wr_ptr[2-0]           1           1      100.00 

Total Node Count     =         10 
Toggled Node Count   =         10 
Untoggled Node Count =          0 

Toggle Coverage      =     100.00% (20 of 20 bins)

=================================================================================
=== Instance: /FIFO_top
=== Design Unit: work.FIFO_top
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       6         6         0   100.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_top --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_top.sv
    6                                                module FIFO_top();
    7                                                    bit clk;  
    8                                                    bit rst_n;  
    9                                                
    10                                                  // clock generation
    11                                                   initial begin
    12              1                          1             clk = 0;  
    13              1                          1             forever 
    14              1                      60089                 #1 clk = ~clk;  
    14              2                      60088     
    15                                                   end
    16                                               
    17                                                   //instantiates DUT, interface and bind assertions
    18                                                   FIFO_if f_if(clk);  
    19                                                   FIFO DUT (f_if);
    20                                                   bind FIFO FIFO_SVA FIFO_SVA_INSTA(f_if);
    21                                               
    22                                                   initial begin //passes the interface using config. database
    23              1                          1             uvm_config_db#(virtual FIFO_if)::set(null, "uvm_test_top", "FIFO_IF", f_if);
    24                                                       
    25              1                          1             run_test("FIFO_test");  //run the test

Toggle Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Toggles                          4         2         2    50.00%

================================Toggle Details================================

Toggle Coverage for instance /FIFO_top --

                                              Node      1H->0L      0L->1H  "Coverage"
                                              ---------------------------------------
                                               clk           1           1      100.00 
                                             rst_n           0           0        0.00 

Total Node Count     =          2 
Toggled Node Count   =          1 
Untoggled Node Count =          1 

Toggle Coverage      =      50.00% (2 of 4 bins)

=================================================================================
=== Instance: /FIFO_seq_item_pkg
=== Design Unit: work.FIFO_seq_item_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_seq_item_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_seq_item.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***     `uvm_object_utils(FIFO_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                      30044     Count coming in to IF
    5               2                    ***0***     `uvm_object_utils(FIFO_seq_item);
                                           30044     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***     `uvm_object_utils(FIFO_seq_item);
    5               4                    ***0***     `uvm_object_utils(FIFO_seq_item);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                      30044     Count coming in to IF
    5               5                    ***0***     `uvm_object_utils(FIFO_seq_item);
                                           30044     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***     `uvm_object_utils(FIFO_seq_item);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_seq_item_pkg --

  File FIFO_seq_item.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         5        10    33.33%

================================Statement Details================================

Statement Coverage for instance /FIFO_seq_item_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_seq_item.sv
    1                                                package FIFO_seq_item_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                class FIFO_seq_item extends uvm_sequence_item;
    5               1                    ***0***     `uvm_object_utils(FIFO_seq_item);
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                      30044     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                      30044     
    5              10                    ***0***     
    6                                                parameter FIFO_WIDTH = 16;
    7                                                parameter FIFO_DEPTH = 8;
    8                                                rand logic rst_n,wr_en, rd_en;
    9                                                rand logic [FIFO_WIDTH-1:0] data_in;
    10                                               logic [FIFO_WIDTH-1:0] data_out;
    11                                               logic full, empty, almostfull, almostempty, underflow, wr_ack, overflow;
    12                                               
    13              1                      90136     int RD_EN_ON_DIST = 30;
    14              1                      90136     int WR_EN_ON_DIST = 70;
    15                                               
    16                                               
    17                                               function new(string name = "FIFO_seq_item");
    18              1                      90136         super.new(name);
    19                                               endfunction
    20                                               
    21                                               function string convert2string();
    22              1                    ***0***         return $sformatf("%s rst_n = 0b%b, wr_en = 0b%0b, rd_en = 0b%0b, data_in = 0b%0b, data_out = 0b%0b, full = 0b%0b, empty = %0s, almostfull = 0b%0b, almostempty = 0b%0b, overflow = 0b%0b, underflow = 0b%0b, wr_ack = 0b%0b"  , super.convert2string(), rst_n, wr_en, rd_en, data_in, data_out, full, empty, almostfull, almostempty,
    23                                                    overflow, underflow, wr_ack);
    24                                               endfunction
    25                                               
    26                                               function string convert2string_stimulus();
    27              1                    ***0***         return $sformatf("rst_n = 0b%b, wr_en = 0b%0b, rd_en = 0b%0b, data_in = 0b%0b",  rst_n, wr_en, rd_en, data_in);


=================================================================================
=== Instance: /FIFO_reset_sequence_pkg
=== Design Unit: work.FIFO_reset_sequence_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_reset_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_reset_sequence.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***     `uvm_object_utils(FIFO_reset_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          2     Count coming in to IF
    6               2                    ***0***     `uvm_object_utils(FIFO_reset_sequence);
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***     `uvm_object_utils(FIFO_reset_sequence);
    6               4                    ***0***     `uvm_object_utils(FIFO_reset_sequence);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          2     Count coming in to IF
    6               5                    ***0***     `uvm_object_utils(FIFO_reset_sequence);
                                               2     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***     `uvm_object_utils(FIFO_reset_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_reset_sequence_pkg --

  File FIFO_reset_sequence.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      18        10         8    55.55%

================================Statement Details================================

Statement Coverage for instance /FIFO_reset_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_reset_sequence.sv
    1                                                package FIFO_reset_sequence_pkg;
    2                                                import FIFO_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class FIFO_reset_sequence extends uvm_sequence #(FIFO_seq_item);
    6               1                    ***0***     `uvm_object_utils(FIFO_reset_sequence);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                          2     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                          2     
    6              10                    ***0***     
    7                                                FIFO_seq_item  seq_item;
    8                                                
    9                                                function new(string name = "FIFO_reset_sequence");
    10              1                          1         super.new(name);
    11                                               endfunction
    12                                               
    13                                               task body;
    14              1                          2     seq_item = FIFO_seq_item::type_id::create("seq_item");
    15              1                          2     start_item(seq_item);
    16              1                          2     seq_item.rst_n = 0;
    17              1                          2     seq_item.wr_en = 0;
    18              1                          2     seq_item.rd_en = 0;
    19              1                          2     seq_item.data_in = 0;
    20              1                          2     finish_item(seq_item);


=================================================================================
=== Instance: /FIFO_empty_sequence_pkg
=== Design Unit: work.FIFO_empty_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       2         2         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_empty_sequence_pkg/FIFO_empty_sequence/body/#ublk#67718807#15/immed__18
                     FIFO_empty_sequence.sv(18)
                                                        0          1
/FIFO_empty_sequence_pkg/FIFO_empty_sequence/body/#ublk#67718807#26/immed__29
                     FIFO_empty_sequence.sv(29)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_empty_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_empty_sequence.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***     `uvm_object_utils(FIFO_empty_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               2                    ***0***     `uvm_object_utils(FIFO_empty_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***     `uvm_object_utils(FIFO_empty_sequence);
    6               4                    ***0***     `uvm_object_utils(FIFO_empty_sequence);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               5                    ***0***     `uvm_object_utils(FIFO_empty_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***     `uvm_object_utils(FIFO_empty_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_empty_sequence_pkg --

  File FIFO_empty_sequence.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        12         8    60.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_empty_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_empty_sequence.sv
    1                                                package FIFO_empty_sequence_pkg;
    2                                                import FIFO_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class FIFO_empty_sequence extends uvm_sequence #(FIFO_seq_item);
    6               1                    ***0***     `uvm_object_utils(FIFO_empty_sequence);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                          1     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                          1     
    6              10                    ***0***     
    7                                                FIFO_seq_item seq_item;
    8                                                
    9                                                function new(string name = "FIFO_empty_sequence");
    10              1                          1         super.new(name);
    11                                               endfunction
    12                                               
    13                                               task body;
    14              1                          1     seq_item = FIFO_seq_item::type_id::create("seq_item");
    15              1                          8     repeat (seq_item.FIFO_DEPTH) begin
    16              1                          8     seq_item = FIFO_seq_item::type_id::create("seq_item");
    17              1                          8     start_item(seq_item);
    18                                               assert(seq_item.randomize()  with {
    19                                                               wr_en == 0;    // Write disabled
    20                                                               rd_en == 1;    // Read enabled
    21                                                               rst_n == 1;
    22                                                           });
    23              1                          8     finish_item(seq_item);
    24                                               end
    25                                               
    26              1                          5     repeat (5) begin
    27              1                          5     seq_item = FIFO_seq_item::type_id::create("seq_item");
    28              1                          5     start_item(seq_item);
    29                                               assert(seq_item.randomize()  with {
    30                                                               wr_en == 0;    // Write disabled
    31                                                               rd_en == 1;    // Read enabled
    32                                                               rst_n == 1;
    33                                                           });
    34              1                          5     finish_item(seq_item);


=================================================================================
=== Instance: /FIFO_full_sequence_pkg
=== Design Unit: work.FIFO_full_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       2         2         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_full_sequence_pkg/FIFO_full_sequence/body/#ublk#123788807#15/immed__18
                     FIFO_full_sequence.sv(18)          0          1
/FIFO_full_sequence_pkg/FIFO_full_sequence/body/#ublk#123788807#26/immed__29
                     FIFO_full_sequence.sv(29)          0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_full_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_full_sequence.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***     `uvm_object_utils(FIFO_full_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               2                    ***0***     `uvm_object_utils(FIFO_full_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***     `uvm_object_utils(FIFO_full_sequence);
    6               4                    ***0***     `uvm_object_utils(FIFO_full_sequence);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               5                    ***0***     `uvm_object_utils(FIFO_full_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***     `uvm_object_utils(FIFO_full_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_full_sequence_pkg --

  File FIFO_full_sequence.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      20        12         8    60.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_full_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_full_sequence.sv
    1                                                package FIFO_full_sequence_pkg;
    2                                                import FIFO_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class FIFO_full_sequence extends uvm_sequence #(FIFO_seq_item);
    6               1                    ***0***     `uvm_object_utils(FIFO_full_sequence);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                          1     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                          1     
    6              10                    ***0***     
    7                                                FIFO_seq_item seq_item;
    8                                                
    9                                                function new(string name = "FIFO_full_sequence");
    10              1                          1         super.new(name);
    11                                               endfunction
    12                                               
    13                                               task body;
    14              1                          1     seq_item = FIFO_seq_item::type_id::create("seq_item");
    15              1                          8     repeat (seq_item.FIFO_DEPTH) begin
    16              1                          8     seq_item = FIFO_seq_item::type_id::create("seq_item");
    17              1                          8     start_item(seq_item);
    18                                               assert(seq_item.randomize()  with {
    19                                                               wr_en == 1;    // Write enabled
    20                                                               rd_en == 0;    // Read disabled
    21                                                               rst_n == 1;
    22                                                           });
    23              1                          8     finish_item(seq_item);
    24                                               end
    25                                               
    26              1                          5     repeat (5) begin
    27              1                          5     seq_item = FIFO_seq_item::type_id::create("seq_item");
    28              1                          5     start_item(seq_item);
    29                                               assert(seq_item.randomize()  with {
    30                                                               wr_en == 1;    // Write enabled
    31                                                               rd_en == 0;    // Read disabled
    32                                                               rst_n == 1;
    33                                                           });
    34              1                          5     finish_item(seq_item);


=================================================================================
=== Instance: /FIFO_write_then_read_sequence_pkg
=== Design Unit: work.FIFO_write_then_read_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       2         2         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_write_then_read_sequence_pkg/FIFO_write_then_read_sequence/body/#ublk#7297095#14/immed__17
                     FIFO_write_then_read_sequence.sv(17)
                                                        0          1
/FIFO_write_then_read_sequence_pkg/FIFO_write_then_read_sequence/body/#ublk#7297095#24/immed__27
                     FIFO_write_then_read_sequence.sv(27)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_write_then_read_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_then_read_sequence.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***     `uvm_object_utils(FIFO_write_then_read_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               2                    ***0***     `uvm_object_utils(FIFO_write_then_read_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***     `uvm_object_utils(FIFO_write_then_read_sequence);
    6               4                    ***0***     `uvm_object_utils(FIFO_write_then_read_sequence);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               5                    ***0***     `uvm_object_utils(FIFO_write_then_read_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***     `uvm_object_utils(FIFO_write_then_read_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_write_then_read_sequence_pkg --

  File FIFO_write_then_read_sequence.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      19        11         8    57.89%

================================Statement Details================================

Statement Coverage for instance /FIFO_write_then_read_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_then_read_sequence.sv
    1                                                package FIFO_write_then_read_sequence_pkg;
    2                                                import FIFO_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class FIFO_write_then_read_sequence extends uvm_sequence #(FIFO_seq_item);
    6               1                    ***0***     `uvm_object_utils(FIFO_write_then_read_sequence);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                          1     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                          1     
    6              10                    ***0***     
    7                                                FIFO_seq_item seq_item;
    8                                                
    9                                                function new(string name = "FIFO_write_then_read_sequence");
    10              1                          1         super.new(name);
    11                                               endfunction
    12                                               
    13                                               task body;
    14              1                          8     repeat (8) begin
    15              1                          8     seq_item = FIFO_seq_item::type_id::create("seq_item");
    16              1                          8     start_item(seq_item);
    17                                               assert(seq_item.randomize()  with {
    18                                                               wr_en == 1;    // Write enabled
    19                                                               rd_en == 0;    // Read disabled
    20                                                               rst_n == 1;
    21                                                           });
    22              1                          8     finish_item(seq_item);
    23                                               end
    24              1                          8     repeat (8) begin
    25              1                          8     seq_item = FIFO_seq_item::type_id::create("seq_item");
    26              1                          8     start_item(seq_item);
    27                                               assert(seq_item.randomize()  with {
    28                                                               wr_en == 0;    // Write disabled
    29                                                               rd_en == 1;    // Read enabled
    30                                                               rst_n == 1;
    31                                                           });
    32              1                          8     finish_item(seq_item);


=================================================================================
=== Instance: /FIFO_write_only_sequence_pkg
=== Design Unit: work.FIFO_write_only_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_write_only_sequence_pkg/FIFO_write_only_sequence/body/#ublk#39281767#14/immed__17
                     FIFO_write_only_sequence.sv(17)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_write_only_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_only_sequence.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***     `uvm_object_utils(FIFO_write_only_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               2                    ***0***     `uvm_object_utils(FIFO_write_only_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***     `uvm_object_utils(FIFO_write_only_sequence);
    6               4                    ***0***     `uvm_object_utils(FIFO_write_only_sequence);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               5                    ***0***     `uvm_object_utils(FIFO_write_only_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***     `uvm_object_utils(FIFO_write_only_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_write_only_sequence_pkg --

  File FIFO_write_only_sequence.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         7         8    46.66%

================================Statement Details================================

Statement Coverage for instance /FIFO_write_only_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_only_sequence.sv
    1                                                package FIFO_write_only_sequence_pkg;
    2                                                import FIFO_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class FIFO_write_only_sequence extends uvm_sequence #(FIFO_seq_item);
    6               1                    ***0***     `uvm_object_utils(FIFO_write_only_sequence);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                          1     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                          1     
    6              10                    ***0***     
    7                                                FIFO_seq_item seq_item;
    8                                                
    9                                                function new(string name = "FIFO_write_only_sequence");
    10              1                          1         super.new(name);
    11                                               endfunction
    12                                               
    13                                               task body;
    14              1                      10000     repeat (10000) begin
    15              1                      10000     seq_item = FIFO_seq_item::type_id::create("seq_item");
    16              1                      10000     start_item(seq_item);
    17                                               assert(seq_item.randomize()  with {
    18                                                               wr_en == 1;    // Write enabled
    19                                                               rd_en == 0;    // Read disabled
    20                                                           });
    21              1                      10000     finish_item(seq_item);


=================================================================================
=== Instance: /FIFO_read_only_sequence_pkg
=== Design Unit: work.FIFO_read_only_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_read_only_sequence_pkg/FIFO_read_only_sequence/body/#ublk#18055399#14/immed__17
                     FIFO_read_only_sequence.sv(17)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_read_only_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_only_sequence.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***     `uvm_object_utils(FIFO_read_only_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               2                    ***0***     `uvm_object_utils(FIFO_read_only_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***     `uvm_object_utils(FIFO_read_only_sequence);
    6               4                    ***0***     `uvm_object_utils(FIFO_read_only_sequence);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               5                    ***0***     `uvm_object_utils(FIFO_read_only_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***     `uvm_object_utils(FIFO_read_only_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_read_only_sequence_pkg --

  File FIFO_read_only_sequence.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         7         8    46.66%

================================Statement Details================================

Statement Coverage for instance /FIFO_read_only_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_read_only_sequence.sv
    1                                                package FIFO_read_only_sequence_pkg;
    2                                                import FIFO_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class FIFO_read_only_sequence extends uvm_sequence #(FIFO_seq_item);
    6               1                    ***0***     `uvm_object_utils(FIFO_read_only_sequence);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                          1     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                          1     
    6              10                    ***0***     
    7                                                FIFO_seq_item seq_item;
    8                                                
    9                                                function new(string name = "FIFO_read_only_sequence");
    10              1                          1         super.new(name);
    11                                               endfunction
    12                                               
    13                                               task body;
    14              1                      10000     repeat (10000) begin
    15              1                      10000     seq_item = FIFO_seq_item::type_id::create("seq_item");
    16              1                      10000     start_item(seq_item);
    17                                               assert(seq_item.randomize()  with {
    18                                                               wr_en == 0;    // Write disabled
    19                                                               rd_en == 1;    // Read enabled
    20                                                           });
    21              1                      10000     finish_item(seq_item);


=================================================================================
=== Instance: /FIFO_write_read_sequence_pkg
=== Design Unit: work.FIFO_write_read_sequence_pkg
=================================================================================

Assertion Coverage:
    Assertions                       1         1         0   100.00%
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_write_read_sequence_pkg/FIFO_write_read_sequence/body/#ublk#33908887#14/immed__17
                     FIFO_write_read_sequence.sv(17)
                                                        0          1
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         2         8    20.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_write_read_sequence_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_read_sequence.sv
------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               1                    ***0***     `uvm_object_utils(FIFO_write_read_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               2                    ***0***     `uvm_object_utils(FIFO_write_read_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               3                    ***0***     `uvm_object_utils(FIFO_write_read_sequence);
    6               4                    ***0***     `uvm_object_utils(FIFO_write_read_sequence);
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    6                                          1     Count coming in to IF
    6               5                    ***0***     `uvm_object_utils(FIFO_write_read_sequence);
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    6                                    ***0***     Count coming in to IF
    6               6                    ***0***     `uvm_object_utils(FIFO_write_read_sequence);
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_write_read_sequence_pkg --

  File FIFO_write_read_sequence.sv
----------------Focused Condition View-------------------
Line       6 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       6 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  '_1' not hit             Hit '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:          1  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15         7         8    46.66%

================================Statement Details================================

Statement Coverage for instance /FIFO_write_read_sequence_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_write_read_sequence.sv
    1                                                package FIFO_write_read_sequence_pkg;
    2                                                import FIFO_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class FIFO_write_read_sequence extends uvm_sequence #(FIFO_seq_item);
    6               1                    ***0***     `uvm_object_utils(FIFO_write_read_sequence);
    6               2                    ***0***     
    6               3                    ***0***     
    6               4                    ***0***     
    6               5                    ***0***     
    6               6                          1     
    6               7                    ***0***     
    6               8                    ***0***     
    6               9                          1     
    6              10                    ***0***     
    7                                                FIFO_seq_item seq_item;
    8                                                
    9                                                function new(string name = "FIFO_write_read_sequence");
    10              1                          1         super.new(name);
    11                                               endfunction
    12                                               
    13                                               task body;
    14              1                      10000     repeat (10000) begin
    15              1                      10000     seq_item = FIFO_seq_item::type_id::create("seq_item");
    16              1                      10000     start_item(seq_item);
    17                                               assert(seq_item.randomize());
    18              1                      10000     finish_item(seq_item);


=================================================================================
=== Instance: /FIFO_sequencer_pkg
=== Design Unit: work.FIFO_sequencer_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                       4         2         2    50.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_sequencer_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_sequencer.sv
    1                                                package FIFO_sequencer_pkg;
    2                                                import FIFO_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class FIFO_sequencer extends uvm_sequencer #(FIFO_seq_item);
    6               1                    ***0***     `uvm_component_utils(FIFO_sequencer);
    6               2                    ***0***     
    6               3                          2     
    7                                                
    8                                                function new(string name = "FIFO_sequencer", uvm_component parent = null);
    9               1                          1         super.new(name, parent);


=================================================================================
=== Instance: /FIFO_monitor_pkg
=== Design Unit: work.FIFO_monitor_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_monitor_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_monitor.sv
------------------------------------IF Branch------------------------------------
    39                                     30044     Count coming in to IF
    39              1                    ***0***         `uvm_info("run_phase", rsp_seq_item.convert2string_stimulus(), UVM_HIGH)
                                           30044     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      24        21         3    87.50%

================================Statement Details================================

Statement Coverage for instance /FIFO_monitor_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_monitor.sv
    1                                                package FIFO_monitor_pkg;
    2                                                import FIFO_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class FIFO_monitor extends uvm_monitor;
    6               1                    ***0***     `uvm_component_utils(FIFO_monitor)
    6               2                    ***0***     
    6               3                          2     
    7                                                virtual FIFO_if FIFO_vif;
    8                                                FIFO_seq_item rsp_seq_item;
    9                                                uvm_analysis_port #(FIFO_seq_item) mon_ap;
    10                                               
    11                                               function new(string name = "FIFO_monitor", uvm_component parent = null);
    12              1                          1         super.new(name, parent);
    13                                               endfunction
    14                                               
    15                                               function void build_phase(uvm_phase phase);
    16              1                          1     super.build_phase(phase);
    17              1                          1     mon_ap = new("mon_ap", this);
    18                                               endfunction: build_phase
    19                                               
    20                                               task run_phase(uvm_phase phase);
    21              1                          1     super.run_phase(phase);
    22              1                          1     forever begin
    23              1                      30045         rsp_seq_item = FIFO_seq_item::type_id::create("rsp_seq_item");
    24              1                      30045         @(negedge FIFO_vif.clk);
    25              1                      30044         rsp_seq_item.rst_n = FIFO_vif.rst_n;
    26              1                      30044         rsp_seq_item.rd_en = FIFO_vif.rd_en;
    27              1                      30044         rsp_seq_item.wr_en = FIFO_vif.wr_en;
    28              1                      30044         rsp_seq_item.data_in = FIFO_vif.data_in;
    29                                               
    30              1                      30044         rsp_seq_item.data_out = FIFO_vif.data_out;
    31              1                      30044         rsp_seq_item.full = FIFO_vif.full;
    32              1                      30044         rsp_seq_item.empty = FIFO_vif.empty;
    33              1                      30044         rsp_seq_item.almostfull = FIFO_vif.almostfull;
    34              1                      30044         rsp_seq_item.almostempty = FIFO_vif.almostempty;
    35              1                      30044         rsp_seq_item.overflow = FIFO_vif.overflow;
    36              1                      30044         rsp_seq_item.underflow = FIFO_vif.underflow;
    37              1                      30044         rsp_seq_item.wr_ack = FIFO_vif.wr_ack;
    38              1                      30044         mon_ap.write(rsp_seq_item);
    39              1                    ***0***         `uvm_info("run_phase", rsp_seq_item.convert2string_stimulus(), UVM_HIGH)


=================================================================================
=== Instance: /FIFO_config_pkg
=== Design Unit: work.FIFO_config_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        10         0        10     0.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_config_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_config.sv
------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               1                    ***0***     `uvm_object_utils(FIFO_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               2                    ***0***     `uvm_object_utils(FIFO_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               3                    ***0***     `uvm_object_utils(FIFO_config)
    5               4                    ***0***     `uvm_object_utils(FIFO_config)
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               5                    ***0***     `uvm_object_utils(FIFO_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    5                                    ***0***     Count coming in to IF
    5               6                    ***0***     `uvm_object_utils(FIFO_config)
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                       2         0         2     0.00%

================================Condition Details================================

Condition Coverage for instance /FIFO_config_pkg --

  File FIFO_config.sv
----------------Focused Condition View-------------------
Line       5 Item    1  (name != 0)
Condition totals: 0 of 1 input term covered = 0.00%

   Input Term   Covered  Reason for no coverage   Hint
  -----------  --------  -----------------------  --------------
  (name != 0)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:    ***0***  (name != 0)_0         -                             
  Row   2:    ***0***  (name != 0)_1         -                             

----------------Focused Condition View-------------------
Line       5 Item    2  (tmp_data__ != null)
Condition totals: 0 of 1 input term covered = 0.00%

            Input Term   Covered  Reason for no coverage   Hint
           -----------  --------  -----------------------  --------------
  (tmp_data__ != null)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target              Non-masking condition(s)      
 ---------  ---------  --------------------    -------------------------     
  Row   1:    ***0***  (tmp_data__ != null)_0  -                             
  Row   2:    ***0***  (tmp_data__ != null)_1  -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         1        10     9.09%

================================Statement Details================================

Statement Coverage for instance /FIFO_config_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_config.sv
    1                                                package FIFO_config_pkg;
    2                                                import uvm_pkg::*;
    3                                                `include "uvm_macros.svh"
    4                                                class FIFO_config extends uvm_object;
    5               1                    ***0***     `uvm_object_utils(FIFO_config)
    5               2                    ***0***     
    5               3                    ***0***     
    5               4                    ***0***     
    5               5                    ***0***     
    5               6                    ***0***     
    5               7                    ***0***     
    5               8                    ***0***     
    5               9                    ***0***     
    5              10                    ***0***     
    6                                                
    7                                                virtual FIFO_if FIFO_vif;
    8                                                
    9                                                function new(string name = "FIFO_config");
    10              1                          1         super.new(name);


=================================================================================
=== Instance: /FIFO_driver_pkg
=== Design Unit: work.FIFO_driver_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         2         1         1    50.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_driver_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_driver.sv
------------------------------------IF Branch------------------------------------
    27                                     30044     Count coming in to IF
    27              1                    ***0***         `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH) 
                                           30044     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_driver_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_driver.sv
    1                                                package FIFO_driver_pkg;
    2                                                import FIFO_config_pkg::*;
    3                                                import FIFO_seq_item_pkg::*;
    4                                                import uvm_pkg::*;
    5                                                `include "uvm_macros.svh"
    6                                                class FIFO_driver extends uvm_driver #(FIFO_seq_item);
    7               1                    ***0***     `uvm_component_utils(FIFO_driver)
    7               2                    ***0***     
    7               3                          2     
    8                                                
    9                                                virtual FIFO_if FIFO_vif;
    10                                               FIFO_seq_item stim_seq_item;
    11                                               
    12                                               function new(string name = "FIFO_driver", uvm_component parent = null);
    13              1                          1         super.new(name, parent);
    14                                               endfunction
    15                                               
    16                                               task run_phase(uvm_phase phase);
    17              1                          1     super.run_phase(phase);
    18              1                          1     forever begin
    19              1                      30045         stim_seq_item = FIFO_seq_item::type_id::create("stim_seq_item");
    20              1                      30045         seq_item_port.get_next_item(stim_seq_item);
    21              1                      30044         FIFO_vif.rst_n = stim_seq_item.rst_n;
    22              1                      30044         FIFO_vif.wr_en = stim_seq_item.wr_en;
    23              1                      30044         FIFO_vif.rd_en = stim_seq_item.rd_en;
    24              1                      30044         FIFO_vif.data_in = stim_seq_item.data_in;
    25              1                      30044         @(negedge FIFO_vif.clk);
    26              1                      30044         seq_item_port.item_done();
    27              1                    ***0***         `uvm_info("run_phase", stim_seq_item.convert2string_stimulus(), UVM_HIGH) 


=================================================================================
=== Instance: /FIFO_agent_pkg
=== Design Unit: work.FIFO_agent_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                         4         1         3    25.00%

================================Branch Details================================

Branch Coverage for instance /FIFO_agent_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_agent.sv
------------------------------------IF Branch------------------------------------
    24                                         1     Count coming in to IF
    24              1                    ***0***     if(!uvm_config_db #(FIFO_config)::get(this,"", "CFG", FIFO_cfg)) begin
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    25                                   ***0***     Count coming in to IF
    25              1                    ***0***     `uvm_fatal("build_phase", "Driver - Unable to get configuration object");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      15        12         3    80.00%

================================Statement Details================================

Statement Coverage for instance /FIFO_agent_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_agent.sv
    1                                                package FIFO_agent_pkg;
    2                                                import FIFO_config_pkg::*;
    3                                                import FIFO_driver_pkg::*;
    4                                                import FIFO_monitor_pkg::*;
    5                                                import FIFO_seq_item_pkg::*;
    6                                                import FIFO_sequencer_pkg::*;
    7                                                import uvm_pkg::*;
    8                                                `include "uvm_macros.svh"
    9                                                class FIFO_agent extends uvm_agent;
    10              1                    ***0***     `uvm_component_utils(FIFO_agent)
    10              2                    ***0***     
    10              3                          2     
    11                                               
    12                                               FIFO_driver driver;
    13                                               FIFO_sequencer sqr;
    14                                               FIFO_config FIFO_cfg;
    15                                               FIFO_monitor mon;
    16                                               uvm_analysis_port #(FIFO_seq_item) agt_ap;
    17                                               
    18                                               function new(string name = "FIFO_agent", uvm_component parent = null);
    19              1                          1         super.new(name, parent);
    20                                               endfunction
    21                                               
    22                                               function void build_phase(uvm_phase phase);
    23              1                          1     super.build_phase(phase);
    24                                               if(!uvm_config_db #(FIFO_config)::get(this,"", "CFG", FIFO_cfg)) begin
    25              1                    ***0***     `uvm_fatal("build_phase", "Driver - Unable to get configuration object");
    26                                               end
    27                                               
    28              1                          1     driver = FIFO_driver::type_id::create("driver", this);
    29              1                          1     sqr = FIFO_sequencer::type_id::create("sqr", this);
    30              1                          1     mon = FIFO_monitor::type_id::create("mon", this);
    31              1                          1     agt_ap = new("agt_ap", this);
    32                                               endfunction: build_phase
    33                                               
    34                                               function void connect_phase(uvm_phase phase);
    35              1                          1     super.connect_phase(phase);
    36              1                          1     driver.FIFO_vif = FIFO_cfg.FIFO_vif;
    37              1                          1     mon.FIFO_vif = FIFO_cfg.FIFO_vif;
    38              1                          1     driver.seq_item_port.connect(sqr.seq_item_export);
    39              1                          1     mon.mon_ap.connect(agt_ap);


=================================================================================
=== Instance: /FIFO_coverage_pkg
=== Design Unit: work.FIFO_coverage_pkg
=================================================================================

Covergroup Coverage:
    Covergroups                      1        na        na   100.00%
        Coverpoints/Crosses         23        na        na        na
            Covergroup Bins         70        70         0   100.00%
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /FIFO_coverage_pkg/FIFO_coverage/FIFO_cvgr      100.00%        100          -    Covered              
    covered/total bins:                                    70         70          -                      
    missing/total bins:                                     0         70          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wr_en_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     13042          1          -    Covered              
        bin auto[1]                                     17002          1          -    Covered              
    Coverpoint rd_en_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     17078          1          -    Covered              
        bin auto[1]                                     12966          1          -    Covered              
    Coverpoint full_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     15911          1          -    Covered              
        bin auto[1]                                     14133          1          -    Covered              
    Coverpoint empty_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     19780          1          -    Covered              
        bin auto[1]                                     10264          1          -    Covered              
    Coverpoint almostfull_cp                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     26983          1          -    Covered              
        bin auto[1]                                      3061          1          -    Covered              
    Coverpoint almostempty_cp                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     29712          1          -    Covered              
        bin auto[1]                                       332          1          -    Covered              
    Coverpoint overflow_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     16683          1          -    Covered              
        bin auto[1]                                     13361          1          -    Covered              
    Coverpoint underflow_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     20089          1          -    Covered              
        bin auto[1]                                      9955          1          -    Covered              
    Coverpoint wr_ack_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     25720          1          -    Covered              
        bin auto[1]                                      4324          1          -    Covered              
    Cross wr_full                                     100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                       13104          1          -    Covered              
            bin <auto[0],auto[1]>                        1029          1          -    Covered              
            bin <auto[1],auto[0]>                        3898          1          -    Covered              
            bin <auto[0],auto[0]>                       12013          1          -    Covered              
    Cross wr_empty                                    100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                         170          1          -    Covered              
            bin <auto[0],auto[1]>                       10094          1          -    Covered              
            bin <auto[1],auto[0]>                       16832          1          -    Covered              
            bin <auto[0],auto[0]>                        2948          1          -    Covered              
    Cross wr_almostfull                               100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                        1993          1          -    Covered              
            bin <auto[0],auto[1]>                        1068          1          -    Covered              
            bin <auto[1],auto[0]>                       15009          1          -    Covered              
            bin <auto[0],auto[0]>                       11974          1          -    Covered              
    Cross wr_almostempty                              100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                         262          1          -    Covered              
            bin <auto[0],auto[1]>                          70          1          -    Covered              
            bin <auto[1],auto[0]>                       16740          1          -    Covered              
            bin <auto[0],auto[0]>                       12972          1          -    Covered              
    Cross wr_overflow                                 100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                       13361          1          -    Covered              
            bin <auto[1],auto[0]>                        3641          1          -    Covered              
            bin <auto[0],auto[0]>                       13042          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_en0_overflow1                     0                     -    ZERO                 
    Cross wr_underflow                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          39          1          -    Covered              
            bin <auto[0],auto[1]>                        9916          1          -    Covered              
            bin <auto[1],auto[0]>                       16963          1          -    Covered              
            bin <auto[0],auto[0]>                        3126          1          -    Covered              
    Cross wr_wr_ack                                   100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                        4324          1          -    Covered              
            bin <auto[1],auto[0]>                       12678          1          -    Covered              
            bin <auto[0],auto[0]>                       13042          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_en0_wr_ack1                       0                     -    ZERO                 
    Cross rd_full                                     100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[0]>                       12966          1          -    Covered              
            bin <auto[0],auto[1]>                       14133          1          -    Covered              
            bin <auto[0],auto[0]>                        2945          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin rd_en1_full1                         0                     -    ZERO                 
    Cross rd_empty                                    100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                       10071          1          -    Covered              
            bin <auto[0],auto[1]>                         193          1          -    Covered              
            bin <auto[1],auto[0]>                        2895          1          -    Covered              
            bin <auto[0],auto[0]>                       16885          1          -    Covered              
    Cross rd_almostfull                               100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                        2029          1          -    Covered              
            bin <auto[0],auto[1]>                        1032          1          -    Covered              
            bin <auto[1],auto[0]>                       10937          1          -    Covered              
            bin <auto[0],auto[0]>                       16046          1          -    Covered              
    Cross rd_almostempty                              100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                         104          1          -    Covered              
            bin <auto[0],auto[1]>                         228          1          -    Covered              
            bin <auto[1],auto[0]>                       12862          1          -    Covered              
            bin <auto[0],auto[0]>                       16850          1          -    Covered              
    Cross rd_overflow                                 100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                        1230          1          -    Covered              
            bin <auto[0],auto[1]>                       12131          1          -    Covered              
            bin <auto[1],auto[0]>                       11736          1          -    Covered              
            bin <auto[0],auto[0]>                        4947          1          -    Covered              
    Cross rd_underflow                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                        9955          1          -    Covered              
            bin <auto[1],auto[0]>                        3011          1          -    Covered              
            bin <auto[0],auto[0]>                       17078          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin rd_en0_underflow1                    0                     -    ZERO                 
    Cross rd_wr_ack                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                        1029          1          -    Covered              
            bin <auto[0],auto[1]>                        3295          1          -    Covered              
            bin <auto[1],auto[0]>                       11937          1          -    Covered              
            bin <auto[0],auto[0]>                       13783          1          -    Covered              
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      14        12         2    85.71%

================================Statement Details================================

Statement Coverage for instance /FIFO_coverage_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_coverage.sv
    1                                                package FIFO_coverage_pkg;
    2                                                import FIFO_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                class FIFO_coverage extends uvm_component;
    6               1                    ***0***     `uvm_component_utils(FIFO_coverage)
    6               2                    ***0***     
    6               3                          2     
    7                                                uvm_analysis_export #(FIFO_seq_item) cov_export;
    8                                                uvm_tlm_analysis_fifo #(FIFO_seq_item) cov_fifo;
    9                                                FIFO_seq_item seq_item_cov;
    10                                               
    11                                                   covergroup FIFO_cvgr;
    12                                                   // Coverpoints 
    13                                                   wr_en_cp:       coverpoint seq_item_cov.wr_en;
    14                                                   rd_en_cp:       coverpoint seq_item_cov.rd_en;
    15                                                   full_cp:        coverpoint seq_item_cov.full;
    16                                                   empty_cp:       coverpoint seq_item_cov.empty;
    17                                                   almostfull_cp:  coverpoint seq_item_cov.almostfull;
    18                                                   almostempty_cp: coverpoint seq_item_cov.almostempty;
    19                                                   overflow_cp:    coverpoint seq_item_cov.overflow;
    20                                                   underflow_cp:   coverpoint seq_item_cov.underflow;
    21                                                   wr_ack_cp:      coverpoint seq_item_cov.wr_ack;
    22                                               
    23                                                   // Cross coverage 
    24                                                   wr_full:        cross wr_en_cp, full_cp;
    25                                                   wr_empty:       cross wr_en_cp, empty_cp;
    26                                                   wr_almostfull:  cross wr_en_cp, almostfull_cp;
    27                                                   wr_almostempty: cross wr_en_cp, almostempty_cp;
    28                                                   wr_overflow:    cross wr_en_cp, overflow_cp{
    29                                                        
    30                                                       ignore_bins wr_en0_overflow1 = !binsof(wr_en_cp) intersect{1} && binsof(overflow_cp) intersect{1};    
    31                                                   }
    32                                                   wr_underflow:   cross wr_en_cp, underflow_cp;
    33                                                   wr_wr_ack:      cross wr_en_cp, wr_ack_cp{
    34                                                        
    35                                                       ignore_bins wr_en0_wr_ack1 = !binsof(wr_en_cp) intersect{1} && binsof(wr_ack_cp) intersect{1};    
    36                                                   }
    37                                               
    38                                                   rd_full:        cross rd_en_cp, full_cp{
    39                                                        
    40                                                       ignore_bins rd_en1_full1 = binsof(rd_en_cp) intersect{1} && binsof(full_cp) intersect{1};    
    41                                                   }
    42                                                   rd_empty:       cross rd_en_cp, empty_cp;
    43                                                   rd_almostfull:  cross rd_en_cp, almostfull_cp;
    44                                                   rd_almostempty: cross rd_en_cp, almostempty_cp;
    45                                                   rd_overflow:    cross rd_en_cp, overflow_cp;
    46                                                   rd_underflow:   cross rd_en_cp, underflow_cp{
    47                                                        
    48                                                       ignore_bins rd_en0_underflow1 = !binsof(rd_en_cp) intersect{1} && binsof(underflow_cp) intersect{1};    
    49                                                   }
    50                                                   rd_wr_ack:      cross rd_en_cp, wr_ack_cp;
    51                                               endgroup
    52                                               
    53                                                function new(string name = "FIFO_coverage", uvm_component parent = null);
    54              1                          1         super.new(name, parent);
    55              1                          1         FIFO_cvgr = new();
    56                                               endfunction
    57                                               
    58                                               function void build_phase(uvm_phase phase);
    59              1                          1     super.build_phase(phase);
    60              1                          1     cov_export = new("cov_export", this);
    61              1                          1     cov_fifo = new("cov_fifo", this);
    62                                               endfunction: build_phase
    63                                               
    64                                               function void connect_phase(uvm_phase phase);
    65              1                          1     super.connect_phase(phase);
    66              1                          1     cov_export.connect(cov_fifo.analysis_export);
    67                                               endfunction
    68                                               
    69                                               task run_phase(uvm_phase phase);
    70              1                          1     super.run_phase(phase);
    71              1                          1     forever begin
    72              1                      30045     cov_fifo.get(seq_item_cov);
    73              1                      30044     FIFO_cvgr.sample();


=================================================================================
=== Instance: /FIFO_scoreboard_pkg
=== Design Unit: work.FIFO_scoreboard_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        34        28         6    82.35%

================================Branch Details================================

Branch Coverage for instance /FIFO_scoreboard_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_scoreboard.sv
------------------------------------IF Branch------------------------------------
    50                                     30044     Count coming in to IF
    50              1                    ***0***           if (seq_item_sb.data_out != data_out_ref && ref_flags != dut_flags) begin
    53              1                      30044           end else begin
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    51                                   ***0***     Count coming in to IF
    51              1                    ***0***             `uvm_error("run_phase", $sformatf("comparison failed, Transaction received by the DUT: 0b%0b and DUT FLAGS: %b While the reference out: 0b%0b and REF FLAGS: %b", seq_item_sb.convert2string(), data_out_ref, dut_flags, ref_flags));
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    54                                     30044     Count coming in to IF
    54              1                    ***0***             `uvm_info("run_phase", $sformatf("correct FIFO out: %s", seq_item_sb.convert2string()), UVM_HIGH);
                                           30044     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    64                                     30044     Count coming in to IF
    64              1                        303               if (!seq_item_chk.rst_n) begin
    70              1                       4324               end else if (seq_item_chk.wr_en && count < FIFO_DEPTH) begin
    73              1                      25417               end else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    75                                     25417     Count coming in to IF
    75              1                      12508                 overflow_ref = (full_ref && seq_item_chk.wr_en) ? 1 : 0;
    75              2                      12909                 overflow_ref = (full_ref && seq_item_chk.wr_en) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    80                                     30044     Count coming in to IF
    80              1                        303               if (!seq_item_chk.rst_n) begin
    84              1                       2882               end else if (seq_item_chk.rd_en && count != 0) begin
    86              1                      26859               end else begin
Branch totals: 3 hits of 3 branches = 100.00%

------------------------------------IF Branch------------------------------------
    87                                     26859     Count coming in to IF
    87              1                       9945                 underflow_ref = (empty_ref && seq_item_chk.rd_en) ? 1 : 0;
    87              2                      16914                 underflow_ref = (empty_ref && seq_item_chk.rd_en) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    92                                     30044     Count coming in to IF
    92              1                        303           if (!seq_item_chk.rst_n) begin // count
    94              1                       3295           end else if (seq_item_chk.wr_en && !seq_item_chk.rd_en && !full_ref) begin
    96              1                        913           end else if (!seq_item_chk.wr_en && seq_item_chk.rd_en && !empty_ref) begin
    98              1                        972           end else if (seq_item_chk.wr_en && seq_item_chk.rd_en && full_ref) begin
    100             1                         32           end else if (seq_item_chk.wr_en && seq_item_chk.rd_en && empty_ref) begin
                                           24529     All False Count
Branch totals: 6 hits of 6 branches = 100.00%

------------------------------------IF Branch------------------------------------
    104                                    30044     Count coming in to IF
    104             1                      14133           full_ref = (count == FIFO_DEPTH) ? 1 : 0;
    104             2                      15911           full_ref = (count == FIFO_DEPTH) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    105                                    30044     Count coming in to IF
    105             1                      10264           empty_ref = (count == 0) ? 1 : 0;
    105             2                      19780           empty_ref = (count == 0) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    106                                    30044     Count coming in to IF
    106             1                       3061           almostfull_ref = (count == FIFO_DEPTH - 1) ? 1 : 0;
    106             2                      26983           almostfull_ref = (count == FIFO_DEPTH - 1) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    107                                    30044     Count coming in to IF
    107             1                        332           almostempty_ref = (count == 1) ? 1 : 0;
    107             2                      29712           almostempty_ref = (count == 1) ? 1 : 0;
Branch totals: 2 hits of 2 branches = 100.00%

------------------------------------IF Branch------------------------------------
    113                                        1     Count coming in to IF
    113             1                          1         `uvm_info("report_phase", $sformatf("Total Successful Transactions : %0d", correct_count), UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    114                                        1     Count coming in to IF
    114             1                          1         `uvm_info("report_phase", $sformatf("Total FAILED Transactions : %0d", erorr_count), UVM_MEDIUM);
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Condition Coverage:
    Enabled Coverage              Bins   Covered    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Conditions                      26        24         2    92.30%

================================Condition Details================================

Condition Coverage for instance /FIFO_scoreboard_pkg --

  File FIFO_scoreboard.sv
----------------Focused Condition View-------------------
Line       50 Item    1  ((this.seq_item_sb.data_out != this.data_out_ref) && (this.ref_flags != this.dut_flags))
Condition totals: 0 of 2 input terms covered = 0.00%

                                        Input Term   Covered  Reason for no coverage   Hint
                                       -----------  --------  -----------------------  --------------
  (this.seq_item_sb.data_out != this.data_out_ref)         N  '_1' not hit             Hit '_1'
                (this.ref_flags != this.dut_flags)         N  No hits                  Hit '_0' and '_1'

     Rows:       Hits  FEC Target                                          Non-masking condition(s)      
 ---------  ---------  --------------------                                -------------------------     
  Row   1:          1  (this.seq_item_sb.data_out != this.data_out_ref)_0  -                             
  Row   2:    ***0***  (this.seq_item_sb.data_out != this.data_out_ref)_1  (this.ref_flags != this.dut_flags)
  Row   3:    ***0***  (this.ref_flags != this.dut_flags)_0                (this.seq_item_sb.data_out != this.data_out_ref)
  Row   4:    ***0***  (this.ref_flags != this.dut_flags)_1                (this.seq_item_sb.data_out != this.data_out_ref)

----------------Focused Condition View-------------------
Line       70 Item    1  (seq_item_chk.wr_en && (this.count < 8))
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  seq_item_chk.wr_en         Y
    (this.count < 8)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  seq_item_chk.wr_en_0  -                             
  Row   2:          1  seq_item_chk.wr_en_1  (this.count < 8)              
  Row   3:          1  (this.count < 8)_0    seq_item_chk.wr_en            
  Row   4:          1  (this.count < 8)_1    seq_item_chk.wr_en            

----------------Focused Condition View-------------------
Line       75 Item    1  (this.full_ref && seq_item_chk.wr_en)
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
       this.full_ref         Y
  seq_item_chk.wr_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.full_ref_0       -                             
  Row   2:          1  this.full_ref_1       seq_item_chk.wr_en            
  Row   3:          1  seq_item_chk.wr_en_0  this.full_ref                 
  Row   4:          1  seq_item_chk.wr_en_1  this.full_ref                 

----------------Focused Condition View-------------------
Line       84 Item    1  (seq_item_chk.rd_en && (this.count != 0))
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  seq_item_chk.rd_en         Y
   (this.count != 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  seq_item_chk.rd_en_0  -                             
  Row   2:          1  seq_item_chk.rd_en_1  (this.count != 0)             
  Row   3:          1  (this.count != 0)_0   seq_item_chk.rd_en            
  Row   4:          1  (this.count != 0)_1   seq_item_chk.rd_en            

----------------Focused Condition View-------------------
Line       87 Item    1  (this.empty_ref && seq_item_chk.rd_en)
Condition totals: 2 of 2 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
      this.empty_ref         Y
  seq_item_chk.rd_en         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  this.empty_ref_0      -                             
  Row   2:          1  this.empty_ref_1      seq_item_chk.rd_en            
  Row   3:          1  seq_item_chk.rd_en_0  this.empty_ref                
  Row   4:          1  seq_item_chk.rd_en_1  this.empty_ref                

----------------Focused Condition View-------------------
Line       94 Item    1  (seq_item_chk.wr_en && ~seq_item_chk.rd_en && ~this.full_ref)
Condition totals: 3 of 3 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  seq_item_chk.wr_en         Y
  seq_item_chk.rd_en         Y
       this.full_ref         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  seq_item_chk.wr_en_0  -                             
  Row   2:          1  seq_item_chk.wr_en_1  (~seq_item_chk.rd_en && ~this.full_ref)
  Row   3:          1  seq_item_chk.rd_en_0  (seq_item_chk.wr_en && ~this.full_ref)
  Row   4:          1  seq_item_chk.rd_en_1  seq_item_chk.wr_en            
  Row   5:          1  this.full_ref_0       (seq_item_chk.wr_en && ~seq_item_chk.rd_en)
  Row   6:          1  this.full_ref_1       (seq_item_chk.wr_en && ~seq_item_chk.rd_en)

----------------Focused Condition View-------------------
Line       96 Item    1  (~seq_item_chk.wr_en && seq_item_chk.rd_en && ~this.empty_ref)
Condition totals: 3 of 3 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  seq_item_chk.wr_en         Y
  seq_item_chk.rd_en         Y
      this.empty_ref         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  seq_item_chk.wr_en_0  (seq_item_chk.rd_en && ~this.empty_ref)
  Row   2:          1  seq_item_chk.wr_en_1  -                             
  Row   3:          1  seq_item_chk.rd_en_0  ~seq_item_chk.wr_en           
  Row   4:          1  seq_item_chk.rd_en_1  (~seq_item_chk.wr_en && ~this.empty_ref)
  Row   5:          1  this.empty_ref_0      (~seq_item_chk.wr_en && seq_item_chk.rd_en)
  Row   6:          1  this.empty_ref_1      (~seq_item_chk.wr_en && seq_item_chk.rd_en)

----------------Focused Condition View-------------------
Line       98 Item    1  (seq_item_chk.wr_en && seq_item_chk.rd_en && this.full_ref)
Condition totals: 3 of 3 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  seq_item_chk.wr_en         Y
  seq_item_chk.rd_en         Y
       this.full_ref         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  seq_item_chk.wr_en_0  -                             
  Row   2:          1  seq_item_chk.wr_en_1  (seq_item_chk.rd_en && this.full_ref)
  Row   3:          1  seq_item_chk.rd_en_0  seq_item_chk.wr_en            
  Row   4:          1  seq_item_chk.rd_en_1  (seq_item_chk.wr_en && this.full_ref)
  Row   5:          1  this.full_ref_0       (seq_item_chk.wr_en && seq_item_chk.rd_en)
  Row   6:          1  this.full_ref_1       (seq_item_chk.wr_en && seq_item_chk.rd_en)

----------------Focused Condition View-------------------
Line       100 Item    1  (seq_item_chk.wr_en && seq_item_chk.rd_en && this.empty_ref)
Condition totals: 3 of 3 input terms covered = 100.00%

          Input Term   Covered  Reason for no coverage   Hint
         -----------  --------  -----------------------  --------------
  seq_item_chk.wr_en         Y
  seq_item_chk.rd_en         Y
      this.empty_ref         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  seq_item_chk.wr_en_0  -                             
  Row   2:          1  seq_item_chk.wr_en_1  (seq_item_chk.rd_en && this.empty_ref)
  Row   3:          1  seq_item_chk.rd_en_0  seq_item_chk.wr_en            
  Row   4:          1  seq_item_chk.rd_en_1  (seq_item_chk.wr_en && this.empty_ref)
  Row   5:          1  this.empty_ref_0      (seq_item_chk.wr_en && seq_item_chk.rd_en)
  Row   6:          1  this.empty_ref_1      (seq_item_chk.wr_en && seq_item_chk.rd_en)

----------------Focused Condition View-------------------
Line       104 Item    1  (this.count == 8)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (this.count == 8)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (this.count == 8)_0   -                             
  Row   2:          1  (this.count == 8)_1   -                             

----------------Focused Condition View-------------------
Line       105 Item    1  (this.count == 0)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (this.count == 0)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (this.count == 0)_0   -                             
  Row   2:          1  (this.count == 0)_1   -                             

----------------Focused Condition View-------------------
Line       106 Item    1  (this.count == (8 - 1))
Condition totals: 1 of 1 input term covered = 100.00%

               Input Term   Covered  Reason for no coverage   Hint
              -----------  --------  -----------------------  --------------
  (this.count == (8 - 1))         Y

     Rows:       Hits  FEC Target                 Non-masking condition(s)      
 ---------  ---------  --------------------       -------------------------     
  Row   1:          1  (this.count == (8 - 1))_0  -                             
  Row   2:          1  (this.count == (8 - 1))_1  -                             

----------------Focused Condition View-------------------
Line       107 Item    1  (this.count == 1)
Condition totals: 1 of 1 input term covered = 100.00%

         Input Term   Covered  Reason for no coverage   Hint
        -----------  --------  -----------------------  --------------
  (this.count == 1)         Y

     Rows:       Hits  FEC Target            Non-masking condition(s)      
 ---------  ---------  --------------------  -------------------------     
  Row   1:          1  (this.count == 1)_0   -                             
  Row   2:          1  (this.count == 1)_1   -                             


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      47        42         5    89.36%

================================Statement Details================================

Statement Coverage for instance /FIFO_scoreboard_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_scoreboard.sv
    1                                                package FIFO_scoreboard_pkg;
    2                                                import FIFO_seq_item_pkg::*;
    3                                                import uvm_pkg::*;
    4                                                `include "uvm_macros.svh"
    5                                                
    6                                                class FIFO_scoreboard extends uvm_scoreboard;
    7               1                    ***0***       `uvm_component_utils(FIFO_scoreboard)
    7               2                    ***0***     
    7               3                          2     
    8                                                  
    9                                                  uvm_analysis_export #(FIFO_seq_item) sb_export;
    10                                                 uvm_tlm_analysis_fifo #(FIFO_seq_item) sb_fifo;
    11                                                 
    12                                                 FIFO_seq_item seq_item_sb;
    13              1                          1       int erorr_count = 0;
    14              1                          1       int correct_count = 0;
    15                                               
    16                                                 parameter FIFO_WIDTH = 16;
    17                                                 parameter FIFO_DEPTH = 8;
    18                                                 localparam max_fifo_addr = $clog2(FIFO_DEPTH);
    19                                               
    20                                                 bit [FIFO_WIDTH-1:0] data_out_ref;
    21                                                 bit wr_ack_ref, overflow_ref, full_ref, empty_ref, almostfull_ref, almostempty_ref, underflow_ref;
    22                                                 bit [max_fifo_addr:0] count;
    23                                                 bit [6:0] ref_flags, dut_flags;
    24                                               
    25                                                 bit [FIFO_WIDTH-1:0] mem_queue[$]; 
    26                                               
    27                                               
    28                                                 function new(string name = "FIFO_scoreboard", uvm_component parent = null);
    29              1                          1         super.new(name, parent);
    30                                                 endfunction
    31                                               
    32                                                 function void build_phase(uvm_phase phase);
    33              1                          1         super.build_phase(phase);
    34              1                          1         sb_export = new("sb_export", this);
    35              1                          1         sb_fifo = new("sb_fifo", this);
    36                                                 endfunction: build_phase
    37                                               
    38                                                 function void connect_phase(uvm_phase phase);
    39              1                          1         super.connect_phase(phase);
    40              1                          1         sb_export.connect(sb_fifo.analysis_export);
    41                                                 endfunction: connect_phase
    42                                               
    43                                                 task run_phase(uvm_phase phase);
    44              1                          1         super.run_phase(phase);
    45              1                          1         forever begin
    46              1                      30045           sb_fifo.get(seq_item_sb);
    47              1                      30044           ref_model(seq_item_sb);
    48              1                      30044           ref_flags = {full_ref, empty_ref, almostfull_ref, almostempty_ref, overflow_ref, underflow_ref, wr_ack_ref};
    49              1                      30044           dut_flags = {seq_item_sb.full, seq_item_sb.empty, seq_item_sb.almostfull, seq_item_sb.almostempty, seq_item_sb.overflow, seq_item_sb.underflow, seq_item_sb.wr_ack};
    50                                                     if (seq_item_sb.data_out != data_out_ref && ref_flags != dut_flags) begin
    51              1                    ***0***             `uvm_error("run_phase", $sformatf("comparison failed, Transaction received by the DUT: 0b%0b and DUT FLAGS: %b While the reference out: 0b%0b and REF FLAGS: %b", seq_item_sb.convert2string(), data_out_ref, dut_flags, ref_flags));
    52              1                    ***0***             erorr_count++;
    53                                                     end else begin
    54              1                    ***0***             `uvm_info("run_phase", $sformatf("correct FIFO out: %s", seq_item_sb.convert2string()), UVM_HIGH);
    55              1                      30044             correct_count++;
    56                                                     end
    57                                                   end
    58                                                 endtask
    59                                               
    60                                               
    61                                               task ref_model(FIFO_seq_item seq_item_chk);
    62                                                    fork
    63                                                       begin // write
    64                                                         if (!seq_item_chk.rst_n) begin
    65              1                        303                 wr_ack_ref = 0;
    66              1                        303                 overflow_ref = 0;
    67              1                        303                 full_ref = 0;
    68              1                        303                 almostfull_ref = 0;
    69              1                        303                 mem_queue.delete(); 
    70                                                         end else if (seq_item_chk.wr_en && count < FIFO_DEPTH) begin
    71              1                       4324                 wr_ack_ref = 1;
    72              1                       4324                 mem_queue.push_back(seq_item_chk.data_in); 
    73                                                         end else begin
    74              1                      25417                 wr_ack_ref = 0;
    75              1                      25417                 overflow_ref = (full_ref && seq_item_chk.wr_en) ? 1 : 0;
    76                                                         end
    77                                                       end
    78                                               
    79                                                       begin //read
    80                                                         if (!seq_item_chk.rst_n) begin
    81              1                        303                 empty_ref = 1;
    82              1                        303                 underflow_ref = 0;
    83              1                        303                 almostempty_ref = 0;
    84                                                         end else if (seq_item_chk.rd_en && count != 0) begin
    85              1                       2882                 data_out_ref = mem_queue.pop_front(); 
    86                                                         end else begin
    87              1                      26859                 underflow_ref = (empty_ref && seq_item_chk.rd_en) ? 1 : 0;
    88                                                         end
    89                                                       end
    90                                                     join
    91                                               
    92                                                     if (!seq_item_chk.rst_n) begin // count
    93              1                        303             count = 0;
    94                                                     end else if (seq_item_chk.wr_en && !seq_item_chk.rd_en && !full_ref) begin
    95              1                       3295             count = count + 1;  
    96                                                     end else if (!seq_item_chk.wr_en && seq_item_chk.rd_en && !empty_ref) begin
    97              1                        913             count = count - 1; 
    98                                                     end else if (seq_item_chk.wr_en && seq_item_chk.rd_en && full_ref) begin
    99              1                        972             count = count - 1;  
    100                                                    end else if (seq_item_chk.wr_en && seq_item_chk.rd_en && empty_ref) begin
    101             1                         32             count = count + 1;  
    102                                                    end
    103                                                     //flags
    104             1                      30044           full_ref = (count == FIFO_DEPTH) ? 1 : 0;
    105             1                      30044           empty_ref = (count == 0) ? 1 : 0;
    106             1                      30044           almostfull_ref = (count == FIFO_DEPTH - 1) ? 1 : 0;
    107             1                      30044           almostempty_ref = (count == 1) ? 1 : 0;
    108                                              endtask
    109                                              
    110                                              
    111                                                function void report_phase(uvm_phase phase);
    112             1                          1         super.report_phase(phase);
    113             1                          1         `uvm_info("report_phase", $sformatf("Total Successful Transactions : %0d", correct_count), UVM_MEDIUM);
    114             1                          1         `uvm_info("report_phase", $sformatf("Total FAILED Transactions : %0d", erorr_count), UVM_MEDIUM);


=================================================================================
=== Instance: /FIFO_env_pkg
=== Design Unit: work.FIFO_env_pkg
=================================================================================
Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      11         9         2    81.81%

================================Statement Details================================

Statement Coverage for instance /FIFO_env_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_env.sv
    1                                                package FIFO_env_pkg;
    2                                                import FIFO_scoreboard_pkg::*;
    3                                                import FIFO_coverage_pkg::*;
    4                                                import FIFO_agent_pkg::*;
    5                                                import uvm_pkg::*;
    6                                                `include "uvm_macros.svh"
    7                                                class FIFO_env extends uvm_env;
    8               1                    ***0***     `uvm_component_utils(FIFO_env)
    8               2                    ***0***     
    8               3                          2     
    9                                                
    10                                               FIFO_agent agt;
    11                                               FIFO_scoreboard sb;
    12                                               FIFO_coverage cov;
    13                                               
    14                                               function new(string name = "FIFO_env", uvm_component parent = null);
    15              1                          1         super.new(name, parent);
    16                                               endfunction
    17                                               
    18                                               function void build_phase(uvm_phase phase);
    19              1                          1     super.build_phase(phase);
    20              1                          1     agt = FIFO_agent::type_id::create("agt", this);
    21              1                          1     sb = FIFO_scoreboard::type_id::create("sb", this);
    22              1                          1     cov = FIFO_coverage::type_id::create("cov", this);
    23                                               endfunction: build_phase
    24                                               
    25                                               function void connect_phase(uvm_phase phase);
    26              1                          1     super.connect_phase(phase);
    27              1                          1     agt.agt_ap.connect(sb.sb_export);
    28              1                          1     agt.agt_ap.connect(cov.cov_export);


=================================================================================
=== Instance: /FIFO_test_pkg
=== Design Unit: work.FIFO_test_pkg
=================================================================================
Branch Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Branches                        36        17        19    47.22%

================================Branch Details================================

Branch Coverage for instance /FIFO_test_pkg

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_test.sv
------------------------------------IF Branch------------------------------------
    42                                         1     Count coming in to IF
    42              1                    ***0***     if(!uvm_config_db #(virtual FIFO_if)::get(this,"", "FIFO_IF", FIFO_cfg.FIFO_vif))
                                               1     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    43                                   ***0***     Count coming in to IF
    43              1                    ***0***     `uvm_fatal("build_phase", "Test - Unable to get the virtual interface of thr FIFO from the uvm_config_db");
                                         ***0***     All False Count
Branch totals: 0 hits of 2 branches = 0.00%

------------------------------------IF Branch------------------------------------
    52                                         1     Count coming in to IF
    52              1                          1         `uvm_info("run_phase", "Reset Asserted", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    54                                         1     Count coming in to IF
    54              1                          1         `uvm_info("run_phase", "Reset Desserted", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    56                                         1     Count coming in to IF
    56              1                          1         `uvm_info("run_phase", "write_read Sequence Generation Started", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    58                                         1     Count coming in to IF
    58              1                          1         `uvm_info("run_phase", "write_read Sequence Generation Ended", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    60                                         1     Count coming in to IF
    60              1                          1         `uvm_info("run_phase", "Write Sequence Generation Started", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    62                                         1     Count coming in to IF
    62              1                          1         `uvm_info("run_phase", "Write Sequence Generation Ended", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    64                                         1     Count coming in to IF
    64              1                          1         `uvm_info("run_phase", "Read Sequence Generation Started", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    66                                         1     Count coming in to IF
    66              1                          1         `uvm_info("run_phase", "Read Sequence Generation Ended", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    68                                         1     Count coming in to IF
    68              1                          1         `uvm_info("run_phase", "Reset Asserted", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    70                                         1     Count coming in to IF
    70              1                          1         `uvm_info("run_phase", "Reset Desserted", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    72                                         1     Count coming in to IF
    72              1                          1         `uvm_info("run_phase", "Write then Read Sequence Generation Started", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    74                                         1     Count coming in to IF
    74              1                          1         `uvm_info("run_phase", "Write then Read Sequence Generation Ended", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    76                                         1     Count coming in to IF
    76              1                          1         `uvm_info("run_phase", "Full Sequence Generation Started", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    78                                         1     Count coming in to IF
    78              1                          1         `uvm_info("run_phase", "Full Sequence Generation Ended", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    80                                         1     Count coming in to IF
    80              1                          1         `uvm_info("run_phase", "Empty Sequence Generation Started", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%

------------------------------------IF Branch------------------------------------
    82                                         1     Count coming in to IF
    82              1                          1         `uvm_info("run_phase", "Empty Sequence Generation Ended", UVM_LOW)
                                         ***0***     All False Count
Branch totals: 1 hit of 2 branches = 50.00%


Statement Coverage:
    Enabled Coverage              Bins      Hits    Misses  Coverage
    ----------------              ----      ----    ------  --------
    Statements                      43        40         3    93.02%

================================Statement Details================================

Statement Coverage for instance /FIFO_test_pkg --

    Line         Item                      Count     Source 
    ----         ----                      -----     ------ 
  File FIFO_test.sv
    1                                                package FIFO_test_pkg;
    2                                                import FIFO_env_pkg::*;
    3                                                import FIFO_config_pkg::*;
    4                                                import FIFO_write_read_sequence_pkg::*;
    5                                                import FIFO_read_only_sequence_pkg::*;
    6                                                import FIFO_write_only_sequence_pkg::*;
    7                                                import FIFO_write_then_read_sequence_pkg::*;
    8                                                import FIFO_full_sequence_pkg::*;
    9                                                import FIFO_empty_sequence_pkg::*;
    10                                               import FIFO_reset_sequence_pkg::*;
    11                                               import uvm_pkg::*;
    12                                               `include "uvm_macros.svh"
    13                                               class FIFO_test extends uvm_test;
    14              1                    ***0***     `uvm_component_utils(FIFO_test)
    14              2                    ***0***     
    14              3                          4     
    15                                               
    16                                               FIFO_env env;
    17                                               FIFO_config FIFO_cfg;
    18                                               FIFO_write_read_sequence write_read_seq;
    19                                               FIFO_write_then_read_sequence write_then_read_seq;
    20                                               FIFO_write_only_sequence write_seq;
    21                                               FIFO_read_only_sequence read_seq;
    22                                               FIFO_reset_sequence reset_seq;
    23                                               FIFO_full_sequence full_seq;
    24                                               FIFO_empty_sequence empty_seq;
    25                                               
    26                                               function new(string name = "FIFO_test", uvm_component parent = null);
    27              1                          1         super.new(name, parent);
    28                                               endfunction
    29                                               
    30                                               function void build_phase(uvm_phase phase);
    31              1                          1     super.build_phase(phase);
    32              1                          1     env = FIFO_env::type_id::create("env",this);
    33              1                          1     FIFO_cfg = FIFO_config::type_id::create("FIFO_cfg");
    34              1                          1     write_read_seq = FIFO_write_read_sequence::type_id::create("write_read_seq"); 
    35              1                          1     write_seq = FIFO_write_only_sequence::type_id::create("write_seq");
    36              1                          1     read_seq = FIFO_read_only_sequence::type_id::create("read_seq");
    37              1                          1     write_then_read_seq = FIFO_write_then_read_sequence::type_id::create("write_then_read_seq");
    38              1                          1     reset_seq = FIFO_reset_sequence::type_id::create("reset_seq"); 
    39              1                          1     full_seq = FIFO_full_sequence::type_id::create("full_seq"); 
    40              1                          1     empty_seq = FIFO_empty_sequence::type_id::create("empty_seq"); 
    41                                               
    42                                               if(!uvm_config_db #(virtual FIFO_if)::get(this,"", "FIFO_IF", FIFO_cfg.FIFO_vif))
    43              1                    ***0***     `uvm_fatal("build_phase", "Test - Unable to get the virtual interface of thr FIFO from the uvm_config_db");
    44                                               
    45              1                          1     uvm_config_db #(FIFO_config)::set(this,"*", "CFG", FIFO_cfg);
    46                                               endfunction: build_phase
    47                                               
    48                                               task run_phase(uvm_phase phase);
    49              1                          1         super.run_phase(phase);
    50              1                          1         phase.raise_objection(this);
    51                                                   // start different sequences
    52              1                          1         `uvm_info("run_phase", "Reset Asserted", UVM_LOW)
    53              1                          1         reset_seq.start(env.agt.sqr);
    54              1                          1         `uvm_info("run_phase", "Reset Desserted", UVM_LOW)
    55                                                   
    56              1                          1         `uvm_info("run_phase", "write_read Sequence Generation Started", UVM_LOW)
    57              1                          1         write_read_seq.start(env.agt.sqr);
    58              1                          1         `uvm_info("run_phase", "write_read Sequence Generation Ended", UVM_LOW)
    59                                               
    60              1                          1         `uvm_info("run_phase", "Write Sequence Generation Started", UVM_LOW)
    61              1                          1         write_seq.start(env.agt.sqr);
    62              1                          1         `uvm_info("run_phase", "Write Sequence Generation Ended", UVM_LOW)
    63                                               
    64              1                          1         `uvm_info("run_phase", "Read Sequence Generation Started", UVM_LOW)
    65              1                          1         read_seq.start(env.agt.sqr);
    66              1                          1         `uvm_info("run_phase", "Read Sequence Generation Ended", UVM_LOW)
    67                                               
    68              1                          1         `uvm_info("run_phase", "Reset Asserted", UVM_LOW)
    69              1                          1         reset_seq.start(env.agt.sqr);
    70              1                          1         `uvm_info("run_phase", "Reset Desserted", UVM_LOW)
    71                                               
    72              1                          1         `uvm_info("run_phase", "Write then Read Sequence Generation Started", UVM_LOW)
    73              1                          1         write_then_read_seq.start(env.agt.sqr);
    74              1                          1         `uvm_info("run_phase", "Write then Read Sequence Generation Ended", UVM_LOW)
    75                                               
    76              1                          1         `uvm_info("run_phase", "Full Sequence Generation Started", UVM_LOW)
    77              1                          1         full_seq.start(env.agt.sqr);
    78              1                          1         `uvm_info("run_phase", "Full Sequence Generation Ended", UVM_LOW)
    79                                               
    80              1                          1         `uvm_info("run_phase", "Empty Sequence Generation Started", UVM_LOW)
    81              1                          1         empty_seq.start(env.agt.sqr);
    82              1                          1         `uvm_info("run_phase", "Empty Sequence Generation Ended", UVM_LOW)
    83              1                          1         phase.drop_objection(this);


COVERGROUP COVERAGE:
----------------------------------------------------------------------------------------------------------
Covergroup                                             Metric       Goal       Bins    Status               
                                                                                                         
----------------------------------------------------------------------------------------------------------
 TYPE /FIFO_coverage_pkg/FIFO_coverage/FIFO_cvgr      100.00%        100          -    Covered              
    covered/total bins:                                    70         70          -                      
    missing/total bins:                                     0         70          -                      
    % Hit:                                            100.00%        100          -                      
    Coverpoint wr_en_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     13042          1          -    Covered              
        bin auto[1]                                     17002          1          -    Covered              
    Coverpoint rd_en_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     17078          1          -    Covered              
        bin auto[1]                                     12966          1          -    Covered              
    Coverpoint full_cp                                100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     15911          1          -    Covered              
        bin auto[1]                                     14133          1          -    Covered              
    Coverpoint empty_cp                               100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     19780          1          -    Covered              
        bin auto[1]                                     10264          1          -    Covered              
    Coverpoint almostfull_cp                          100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     26983          1          -    Covered              
        bin auto[1]                                      3061          1          -    Covered              
    Coverpoint almostempty_cp                         100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     29712          1          -    Covered              
        bin auto[1]                                       332          1          -    Covered              
    Coverpoint overflow_cp                            100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     16683          1          -    Covered              
        bin auto[1]                                     13361          1          -    Covered              
    Coverpoint underflow_cp                           100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     20089          1          -    Covered              
        bin auto[1]                                      9955          1          -    Covered              
    Coverpoint wr_ack_cp                              100.00%        100          -    Covered              
        covered/total bins:                                 2          2          -                      
        missing/total bins:                                 0          2          -                      
        % Hit:                                        100.00%        100          -                      
        bin auto[0]                                     25720          1          -    Covered              
        bin auto[1]                                      4324          1          -    Covered              
    Cross wr_full                                     100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                       13104          1          -    Covered              
            bin <auto[0],auto[1]>                        1029          1          -    Covered              
            bin <auto[1],auto[0]>                        3898          1          -    Covered              
            bin <auto[0],auto[0]>                       12013          1          -    Covered              
    Cross wr_empty                                    100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                         170          1          -    Covered              
            bin <auto[0],auto[1]>                       10094          1          -    Covered              
            bin <auto[1],auto[0]>                       16832          1          -    Covered              
            bin <auto[0],auto[0]>                        2948          1          -    Covered              
    Cross wr_almostfull                               100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                        1993          1          -    Covered              
            bin <auto[0],auto[1]>                        1068          1          -    Covered              
            bin <auto[1],auto[0]>                       15009          1          -    Covered              
            bin <auto[0],auto[0]>                       11974          1          -    Covered              
    Cross wr_almostempty                              100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                         262          1          -    Covered              
            bin <auto[0],auto[1]>                          70          1          -    Covered              
            bin <auto[1],auto[0]>                       16740          1          -    Covered              
            bin <auto[0],auto[0]>                       12972          1          -    Covered              
    Cross wr_overflow                                 100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                       13361          1          -    Covered              
            bin <auto[1],auto[0]>                        3641          1          -    Covered              
            bin <auto[0],auto[0]>                       13042          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_en0_overflow1                     0                     -    ZERO                 
    Cross wr_underflow                                100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                          39          1          -    Covered              
            bin <auto[0],auto[1]>                        9916          1          -    Covered              
            bin <auto[1],auto[0]>                       16963          1          -    Covered              
            bin <auto[0],auto[0]>                        3126          1          -    Covered              
    Cross wr_wr_ack                                   100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                        4324          1          -    Covered              
            bin <auto[1],auto[0]>                       12678          1          -    Covered              
            bin <auto[0],auto[0]>                       13042          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin wr_en0_wr_ack1                       0                     -    ZERO                 
    Cross rd_full                                     100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[0]>                       12966          1          -    Covered              
            bin <auto[0],auto[1]>                       14133          1          -    Covered              
            bin <auto[0],auto[0]>                        2945          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin rd_en1_full1                         0                     -    ZERO                 
    Cross rd_empty                                    100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                       10071          1          -    Covered              
            bin <auto[0],auto[1]>                         193          1          -    Covered              
            bin <auto[1],auto[0]>                        2895          1          -    Covered              
            bin <auto[0],auto[0]>                       16885          1          -    Covered              
    Cross rd_almostfull                               100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                        2029          1          -    Covered              
            bin <auto[0],auto[1]>                        1032          1          -    Covered              
            bin <auto[1],auto[0]>                       10937          1          -    Covered              
            bin <auto[0],auto[0]>                       16046          1          -    Covered              
    Cross rd_almostempty                              100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                         104          1          -    Covered              
            bin <auto[0],auto[1]>                         228          1          -    Covered              
            bin <auto[1],auto[0]>                       12862          1          -    Covered              
            bin <auto[0],auto[0]>                       16850          1          -    Covered              
    Cross rd_overflow                                 100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                        1230          1          -    Covered              
            bin <auto[0],auto[1]>                       12131          1          -    Covered              
            bin <auto[1],auto[0]>                       11736          1          -    Covered              
            bin <auto[0],auto[0]>                        4947          1          -    Covered              
    Cross rd_underflow                                100.00%        100          -    Covered              
        covered/total bins:                                 3          3          -                      
        missing/total bins:                                 0          3          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                        9955          1          -    Covered              
            bin <auto[1],auto[0]>                        3011          1          -    Covered              
            bin <auto[0],auto[0]>                       17078          1          -    Covered              
        Illegal and Ignore Bins:
            ignore_bin rd_en0_underflow1                    0                     -    ZERO                 
    Cross rd_wr_ack                                   100.00%        100          -    Covered              
        covered/total bins:                                 4          4          -                      
        missing/total bins:                                 0          4          -                      
        % Hit:                                        100.00%        100          -                      
        Auto, Default and User Defined Bins:
            bin <auto[1],auto[1]>                        1029          1          -    Covered              
            bin <auto[0],auto[1]>                        3295          1          -    Covered              
            bin <auto[1],auto[0]>                       11937          1          -    Covered              
            bin <auto[0],auto[0]>                       13783          1          -    Covered              

TOTAL COVERGROUP COVERAGE: 100.00%  COVERGROUP TYPES: 1

DIRECTIVE COVERAGE:
--------------------------------------------------------------------------------------------
Name                                     Design Design   Lang File(Line)      Hits Status    
                                         Unit   UnitType                                     
--------------------------------------------------------------------------------------------
/FIFO_top/DUT/FIFO_SVA_INSTA/reset_cover FIFO_SVA Verilog  SVA  FIFO_SVA.sv(7)   301 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/full_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(15) 1568 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/almostfull_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(20) 1858 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/empty_flag_acover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(25)  320 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/almostempty_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(30)  244 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/overflow_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(40) 12391 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/underflow_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(46) 9842 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/wr_ack_high_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(52) 4277 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/wr_ack_low_flag_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(58) 12391 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/write_op_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(64) 3266 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/read_op_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(70)  904 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/write_pri_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(76)  963 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/read_pri_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(82)   32 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/read_ptr_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(88) 2846 Covered   
/FIFO_top/DUT/FIFO_SVA_INSTA/write_ptr_cover 
                                         FIFO_SVA Verilog  SVA  FIFO_SVA.sv(94) 4277 Covered   

TOTAL DIRECTIVE COVERAGE: 100.00%  COVERS: 15

ASSERTION RESULTS:
--------------------------------------------------------------------
Name                 File(Line)                   Failure      Pass 
                                                  Count        Count
--------------------------------------------------------------------
/FIFO_top/DUT/FIFO_SVA_INSTA/reset_assert
                     FIFO_SVA.sv(6)                     0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/full_flag_assert
                     FIFO_SVA.sv(14)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/almostfull_flag_assert
                     FIFO_SVA.sv(19)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/empty_flag_assert
                     FIFO_SVA.sv(24)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/almostempty_flag_assert
                     FIFO_SVA.sv(29)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/overflow_flag_assert
                     FIFO_SVA.sv(39)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/underflow_flag_assert
                     FIFO_SVA.sv(45)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/wr_ack_high_flag_assert
                     FIFO_SVA.sv(51)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/wr_ack_low_flag_assert
                     FIFO_SVA.sv(57)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/write_op_assert
                     FIFO_SVA.sv(63)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/read_op_assert
                     FIFO_SVA.sv(69)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/write_pri_assert
                     FIFO_SVA.sv(75)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/read_pri_assert
                     FIFO_SVA.sv(81)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/read_ptr_assert
                     FIFO_SVA.sv(87)                    0          1
/FIFO_top/DUT/FIFO_SVA_INSTA/write_ptr_assert
                     FIFO_SVA.sv(93)                    0          1
/FIFO_empty_sequence_pkg/FIFO_empty_sequence/body/#ublk#67718807#15/immed__18
                     FIFO_empty_sequence.sv(18)
                                                        0          1
/FIFO_empty_sequence_pkg/FIFO_empty_sequence/body/#ublk#67718807#26/immed__29
                     FIFO_empty_sequence.sv(29)
                                                        0          1
/FIFO_full_sequence_pkg/FIFO_full_sequence/body/#ublk#123788807#15/immed__18
                     FIFO_full_sequence.sv(18)          0          1
/FIFO_full_sequence_pkg/FIFO_full_sequence/body/#ublk#123788807#26/immed__29
                     FIFO_full_sequence.sv(29)          0          1
/FIFO_write_then_read_sequence_pkg/FIFO_write_then_read_sequence/body/#ublk#7297095#14/immed__17
                     FIFO_write_then_read_sequence.sv(17)
                                                        0          1
/FIFO_write_then_read_sequence_pkg/FIFO_write_then_read_sequence/body/#ublk#7297095#24/immed__27
                     FIFO_write_then_read_sequence.sv(27)
                                                        0          1
/FIFO_write_only_sequence_pkg/FIFO_write_only_sequence/body/#ublk#39281767#14/immed__17
                     FIFO_write_only_sequence.sv(17)
                                                        0          1
/FIFO_read_only_sequence_pkg/FIFO_read_only_sequence/body/#ublk#18055399#14/immed__17
                     FIFO_read_only_sequence.sv(17)
                                                        0          1
/FIFO_write_read_sequence_pkg/FIFO_write_read_sequence/body/#ublk#33908887#14/immed__17
                     FIFO_write_read_sequence.sv(17)
                                                        0          1

Total Coverage By Instance (filtered view): 84.68%

